{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onClickShow","onClickDelete","a","delete","name","email","phone","className","onClick","style","cursor","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","event","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","Header","branding","About","Test","title","body","fetch","then","response","json","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+3BAGA,IAAMA,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAO,EAAP,GAEOF,EAFP,CAIIG,SAAUH,EAAMG,SAASC,QACrB,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOM,aAI7C,IAAK,cACD,OAAO,EAAP,GACOP,EADP,CAEIG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAG5C,IAAK,iBACD,OAAO,EAAP,GACOH,EADP,CAEIG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OAChCA,EAAQC,KAAOL,EAAOM,QAAQD,GACvBD,EAAUJ,EAAOM,QAClBF,OAIlB,QACI,OAAOL,IAINS,EAAb,2MACIT,MAAQ,CACJG,SAAU,GACVO,SAAU,SAAAT,GACN,EAAKU,UAAS,SAAAX,GACV,OAAOD,EAAQC,EAAOC,QALtC,mNAY0BW,IAAMC,IACpB,8CAbZ,OAYcC,EAZd,OAgBQC,KAAKJ,SAAS,CACVR,SAAUW,EAAIE,OAjB1B,qIAsBQ,OACI,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OACzBe,KAAKG,MAAMC,cAxB5B,GAA8BC,aA8BjBC,EAAWzB,EAAQyB,SC0BjBC,E,2MArFXtB,MAAQ,CACJuB,iBAAiB,G,EAGrBC,YAAc,WACV,EAAKb,SAAS,CACVY,iBAAkB,EAAKvB,MAAMuB,mB,EAIrCE,c,uCAAgB,WAAOnB,EAAII,GAAX,SAAAgB,EAAA,+EAEFd,IAAMe,OAAN,qDAC4CrB,IAH1C,OAKRI,EAAS,CACLR,KAAM,iBACNK,QAASD,IAPL,+CAURI,EAAS,CACLR,KAAM,iBACNK,QAASD,IAZL,wD,gIAiBN,IAAD,SAC8BS,KAAKG,MAAMb,QAAtCC,EADH,EACGA,GAAIsB,EADP,EACOA,KAAMC,EADb,EACaA,MAAOC,EADpB,EACoBA,MAEzB,OACI,kBAACT,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKqB,UAAU,uBACX,4BACKH,EACD,uBACII,QAAS,kBAAM,EAAKR,eACpBO,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAErB,uBACIF,QAAS,kBACL,EAAKP,cAAcnB,EAAII,IAE3BqB,UAAU,eACVE,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,SAGf,kBAAC,IAAD,CAAMC,GAAE,uBAAkB/B,IACtB,uBACIyB,UAAU,oBACVE,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPE,YAAa,YAK5B,EAAKtC,MAAMuB,gBACR,wBAAIQ,UAAU,cACV,wBAAIA,UAAU,mBAAmBF,GACjC,wBAAIE,UAAU,mBAAmBD,IAErC,a,GAxEVjC,IAAMuB,WCoBbmB,E,iLArBP,OACI,kBAAClB,EAAD,MACK,SAAAJ,GAAU,IACCd,EAAac,EAAbd,SACR,OACI,kBAAC,IAAMqC,SAAP,KACI,wBAAIT,UAAU,kBACV,0BAAMA,UAAU,eAAhB,YADJ,QAIC5B,EAASK,KAAI,SAAAH,GAAO,OACjB,kBAAC,EAAD,CAASoC,IAAKpC,EAAQC,GAAID,QAASA,e,GAb5CR,IAAMuB,W,iBCAvBsB,EAAiB,SAAC,GAQjB,IAPHC,EAOE,EAPFA,MACAf,EAME,EANFA,KACAX,EAKE,EALFA,MACA2B,EAIE,EAJFA,YACA1C,EAGE,EAHFA,KACA2C,EAEE,EAFFA,SACAC,EACE,EADFA,MAEA,OACI,yBAAKf,UAAU,cACX,2BAAOgB,QAASnB,GAAOe,GACvB,2BACIzC,KAAMA,EACN0B,KAAMA,EACNG,UAAWiB,IAAW,+BAAgC,CAClD,aAAcF,IAElBF,YAAaA,EACb3B,MAAOA,EACP4B,SAAUA,IAEbC,GAAS,yBAAKf,UAAU,oBAAoBe,KAezDJ,EAAeO,aAAe,CAC1B/C,KAAM,QAGKwC,QCkFAQ,E,2MAzHXlD,MAAQ,CACJ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,I,EAGZN,SAAW,SAAAO,GACP,EAAKzC,SAAL,eACKyC,EAAMC,OAAOzB,KAAOwB,EAAMC,OAAOpC,S,EAI1CqC,S,uCAAW,WAAO5C,EAAU0C,GAAjB,yBAAA1B,EAAA,yDACP0B,EAAMG,iBADC,EAGwB,EAAKvD,MAA5B4B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAER,KAATF,EALG,uBAMH,EAAKjB,SAAS,CACVwC,OAAQ,CAAEvB,KAAM,sBAPjB,6BAYO,KAAVC,EAZG,uBAaH,EAAKlB,SAAS,CACVwC,OAAQ,CAAEtB,MAAO,uBAdlB,6BAmBO,KAAVC,EAnBG,wBAoBH,EAAKnB,SAAS,CACVwC,OAAQ,CAAErB,MAAO,uBArBlB,kCA0BD0B,EAAa,CACf5B,OACAC,QACAC,SA7BG,UAgCWlB,IAAM6C,KACpB,6CACAD,GAlCG,QAgCD1C,EAhCC,OAqCPJ,EAAS,CACLR,KAAM,cACNK,QAASO,EAAIE,OAGjB,EAAKL,SAAS,CACViB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,KAGZ,EAAKjC,MAAMwC,QAAQC,KAAK,KAjDjB,4C,gIAoDD,IAAD,SACkC5C,KAAKf,MAApC4B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOqB,EADvB,EACuBA,OAE5B,OACI,kBAAC9B,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKqB,UAAU,aACX,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACX,0BACIuB,SAAU,SAAAF,GAAK,OACX,EAAKE,SAAS5C,EAAU0C,KAG5B,kBAAC,EAAD,CACIT,MAAM,OACNf,KAAK,OACLgB,YAAY,gBACZ3B,MAAOW,EACPiB,SAAU,EAAKA,SACfC,MAAOK,EAAOvB,OAElB,kBAAC,EAAD,CACIe,MAAM,QACNf,KAAK,QACL1B,KAAK,QACL0C,YAAY,iBACZ3B,MAAOY,EACPgB,SAAU,EAAKA,SACfC,MAAOK,EAAOtB,QAElB,kBAAC,EAAD,CACIc,MAAM,QACNf,KAAK,QACLgB,YAAY,iBACZ3B,MAAOa,EACPe,SAAU,EAAKA,SACfC,MAAOK,EAAOrB,QAElB,2BACI5B,KAAK,SACLe,MAAM,cACNc,UAAU,wC,GA9GzBX,aCyIVwC,E,2MAxIX5D,MAAQ,CACJ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,I,EAkBZN,SAAW,SAAAO,GACP,EAAKzC,SAAL,eACKyC,EAAMC,OAAOzB,KAAOwB,EAAMC,OAAOpC,S,EAI1CqC,S,uCAAW,WAAO5C,EAAU0C,GAAjB,2BAAA1B,EAAA,yDACP0B,EAAMG,iBADC,EAGwB,EAAKvD,MAA5B4B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAER,KAATF,EALG,uBAMH,EAAKjB,SAAS,CACVwC,OAAQ,CAAEvB,KAAM,sBAPjB,6BAYO,KAAVC,EAZG,uBAaH,EAAKlB,SAAS,CACVwC,OAAQ,CAAEtB,MAAO,uBAdlB,6BAmBO,KAAVC,EAnBG,wBAoBH,EAAKnB,SAAS,CACVwC,OAAQ,CAAErB,MAAO,uBArBlB,kCA0BD+B,EAAgB,CAClBjC,OACAC,QACAC,SAGIxB,EAAO,EAAKY,MAAM4C,MAAMC,OAAxBzD,GAhCD,UAkCWM,IAAMoD,IAAN,qDACgC1D,GAC9CuD,GApCG,QAkCD/C,EAlCC,OAuCPJ,EAAS,CAAER,KAAM,iBAAkBK,QAASO,EAAIE,OAGhD,EAAKL,SAAS,CACViB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,KAGZ,EAAKjC,MAAMwC,QAAQC,KAAK,KAjDjB,4C,sQApBCrD,EAAOS,KAAKG,MAAM4C,MAAMC,OAAxBzD,G,SACUM,IAAMC,IAAN,qDACgCP,I,OAD5CQ,E,OAIAT,EAAUS,EAAIE,KAEpBD,KAAKJ,SAAS,CACViB,KAAMvB,EAAQuB,KACdC,MAAOxB,EAAQwB,MACfC,MAAOzB,EAAQyB,Q,qIA8Db,IAAD,SACkCf,KAAKf,MAApC4B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOqB,EADvB,EACuBA,OAE5B,OACI,kBAAC9B,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKqB,UAAU,aACX,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACX,0BACIuB,SAAU,SAAAF,GAAK,OACX,EAAKE,SAAS5C,EAAU0C,KAG5B,kBAAC,EAAD,CACIT,MAAM,OACNf,KAAK,OACLgB,YAAY,gBACZ3B,MAAOW,EACPiB,SAAU,EAAKA,SACfC,MAAOK,EAAOvB,OAElB,kBAAC,EAAD,CACIe,MAAM,QACNf,KAAK,QACL1B,KAAK,QACL0C,YAAY,iBACZ3B,MAAOY,EACPgB,SAAU,EAAKA,SACfC,MAAOK,EAAOtB,QAElB,kBAAC,EAAD,CACIc,MAAM,QACNf,KAAK,QACLgB,YAAY,iBACZ3B,MAAOa,EACPe,SAAU,EAAKA,SACfC,MAAOK,EAAOrB,QAElB,2BACI5B,KAAK,SACLe,MAAM,iBACNc,UAAU,wC,GA7HxBX,aCDpB6C,EAAS,SAAA/C,GAAU,IACbgD,EAAahD,EAAbgD,SACR,OACI,yBAAKnC,UAAU,+DACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,gBAClBmC,GAEL,6BACI,wBAAInC,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,YACnB,uBAAGA,UAAU,gBADjB,UAIJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMM,GAAG,eAAeN,UAAU,YAC9B,uBAAGA,UAAU,gBADjB,SAIJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,YACxB,uBAAGA,UAAU,oBADjB,gBAW5BkC,EAAOhB,aAAe,CAClBiB,SAAU,UAOCD,QChCAE,MAVf,WACI,OACI,6BACI,wBAAIpC,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,iCACA,uBAAGA,UAAU,kBAAb,mBCuBGqC,E,2MA3BXpE,MAAQ,CACJqE,MAAO,GACPC,KAAM,I,mFAGW,IAAD,OAChBC,MAAM,gDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAxD,GAAI,OACN,EAAKL,SAAS,CACV0D,MAAOrD,EAAKqD,MACZC,KAAMtD,EAAKsD,Y,+BAKjB,IAAD,EACmBvD,KAAKf,MAArBqE,EADH,EACGA,MAAOC,EADV,EACUA,KACf,OACI,6BACI,4BAAKD,GACL,2BAAIC,Q,GAtBDlD,aCWJuD,MAXf,WACI,OACI,6BACI,wBAAI5C,UAAU,aACV,0BAAMA,UAAU,eAAhB,QADJ,kBAGA,uBAAGA,UAAU,QAAb,sCCuDG6C,G,6LA1CP,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,yBAAK7C,UAAU,OACX,kBAAC,EAAD,CAAQmC,SAAS,oBACjB,yBAAKnC,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI8C,OAAK,EACLC,KAAK,IACLC,UAAWxC,IAEf,kBAAC,IAAD,CACIsC,OAAK,EACLC,KAAK,eACLC,UAAW7B,IAEf,kBAAC,IAAD,CACI2B,OAAK,EACLC,KAAK,oBACLC,UAAWnB,IAEf,kBAAC,IAAD,CACIiB,OAAK,EACLC,KAAK,SACLC,UAAWZ,IAEf,kBAAC,IAAD,CACIU,OAAK,EACLC,KAAK,QACLC,UAAWX,IAEf,kBAAC,IAAD,CAAOW,UAAWJ,a,GAlChCvD,cCPE4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCbNsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlB,MAAK,SAAAmB,GACjCA,EAAaC,kB","file":"static/js/main.28897547.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                // DESTRUCTURE state\r\n                ...state,\r\n                // REPLACING contacts inside of destructured state using filter to ignore specific ID\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact\r\n                )\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => {\r\n                return Reducer(state, action);\r\n            });\r\n        }\r\n    };\r\n\r\n    // Lifecycle\r\n    async componentDidMount() {\r\n        const res = await axios.get(\r\n            'https://jsonplaceholder.typicode.com/users'\r\n        );\r\n\r\n        this.setState({\r\n            contacts: res.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n// Contact Class\r\nclass Contact extends React.Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onClickShow = () => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        });\r\n    };\r\n\r\n    onClickDelete = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(\r\n                `https://jsonplaceholder.typicode.com/users/${id}`\r\n            );\r\n            dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            });\r\n        } catch (e) {\r\n            dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}\r\n                                <i\r\n                                    onClick={() => this.onClickShow()}\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                ></i>\r\n                                <i\r\n                                    onClick={() =>\r\n                                        this.onClickDelete(id, dispatch)\r\n                                    }\r\n                                    className=\"fas fa-times\"\r\n                                    style={{\r\n                                        cursor: 'pointer',\r\n                                        float: 'right',\r\n                                        color: 'red'\r\n                                    }}\r\n                                ></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {this.state.showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">{email}</li>\r\n                                    <li className=\"list-group-item\">{phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\n// PropTypes\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends React.Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact </span>\r\n                                List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = async (dispatch, event) => {\r\n        event.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post(\r\n            'https://jsonplaceholder.typicode.com/users',\r\n            newContact\r\n        );\r\n\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: res.data\r\n        });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    onSubmit={event =>\r\n                                        this.onSubmit(dispatch, event)\r\n                                    }\r\n                                >\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = async (dispatch, event) => {\r\n        event.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            updateContact\r\n        );\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    onSubmit={event =>\r\n                                        this.onSubmit(dispatch, event)\r\n                                    }\r\n                                >\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"nav navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    title: data.title,\r\n                    body: data.body\r\n                })\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404 </span>Page Not Found\r\n            </h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","// React\nimport React, { Component } from 'react';\n// Router\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// Pages\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Test from './components/test/Test';\nimport NotFound from './components/pages/NotFound';\n\n// Provider Context API\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    component={Contacts}\n                                ></Route>\n                                <Route\n                                    exact\n                                    path=\"/contact/add\"\n                                    component={AddContact}\n                                ></Route>\n                                <Route\n                                    exact\n                                    path=\"/contact/edit/:id\"\n                                    component={EditContact}\n                                ></Route>\n                                <Route\n                                    exact\n                                    path=\"/about\"\n                                    component={About}\n                                ></Route>\n                                <Route\n                                    exact\n                                    path=\"/test\"\n                                    component={Test}\n                                ></Route>\n                                <Route component={NotFound}></Route>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}